package org.eclipse.elk.alg.fun
 
/* Metadata file for the Rect-packing algorithm. Enables support for options and specifies autogenerated files.
 * 
 * @author dalu
 */

import org.eclipse.elk.alg.fun.FunLayoutProvider
import org.eclipse.elk.alg.fun.util.PackingStrategy
import org.eclipse.elk.core.math.ElkPadding

//BUNDLE
bundle {
    metadataClass options.FunMetaDataProvider
    idPrefix org.eclipse.elk.fun
}

//ALGORITHM
algorithm fun(FunLayoutProvider) {
    label "Rectangle Layout."
    description "Algorithm for packing of unconnected boxes, i.e. graphs without edges."
    metadataClass options.FunOptions
    supports org.eclipse.elk.aspectRatio = 1.3
    supports org.eclipse.elk.padding = new ElkPadding(15)
    supports org.eclipse.elk.expandNodes
    supports rectPackingOptions.strategy
    supports rectPackingOptions.lpShift
    supports rectPackingOptions.arCalcAbs
    supports rectPackingOptions.onlyFirstIteration
    supports rectPackingOptions.checkForSpecialCase
    supports rectPackingOptions.LP
    supports rectPackingOptions.binarySearchLP
}

//OPTIONS
group rectPackingOptions {
    advanced option binarySearchLP: boolean {
        label "Linear Programming"
        description 
            "Indicates whether the problem should be solved by using linear programming."
        targets nodes
        default = false
    }
    
    advanced option LP: boolean {
        label "Linear Programming"
        description 
            "Indicates whether the problem should be solved by using linear programming."
        targets nodes
        default = false
    }
    
    advanced option strategy: PackingStrategy {
        label "Packing Strategy"
        description 
            "Strategy for approximation of the bounding box. Determines whether layout is sorted by scale measure, aspect ratio or area."
        targets nodes
        default = PackingStrategy.MAX_SCALE_DRIVEN
    }
    
    advanced option lpShift : boolean{
        label "Shift when placing at last placed rectangle."
        description
            "When placing a rectangle behind or below the last placed rectangle, it is sometimes possible to shift the rectangle further to the left
            and right, respectively. True (default) enables the shift and false disables it."
        targets nodes
        default = true
    }
    
    programmatic option arCalcAbs : boolean{
        label "Calculate best aspect ratio with absolute differences."
        description
            "When determining a better drawing with the benchmark aspect ratio. The difference between actual aspect ratio and desired aspect ratio can
            be calculated a) with an absolute difference and b) with the ratio. 
            E.g., 1.67 approximates 1.3 better than 1.0 does, since 1.67/1.3 < 1.3/1.0, even though (1.67 - 1.3) > (1.3 - 1.0).
            When this option is set to true, the absolute distance will be taken."
        targets nodes
        default = false
    } 
    
    programmatic option onlyFirstIteration : boolean{
        label "Only first iteration should be executed."
        description
            "Determines whether only the first iteration should be executed or not. If set to true, only the first iteration will be executed."
        targets nodes
        default = false
    } 
    
    programmatic option checkForSpecialCase : boolean{
        label "Check for special case one big rectangle."
        description
            "Determines, whether the algorithm should check for the case that one big rectangle is present with a lot of smaller rectangles of the same size."
        targets nodes
        default = true
    } 
}
